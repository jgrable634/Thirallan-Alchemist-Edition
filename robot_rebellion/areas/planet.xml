<?xml version="1.0" encoding="utf-8" ?>
<areas>
	<area id="RB.crater">
		<structure id="RB_crashed_ship" x="11" y="20" />
		<structure id="RB_old_ship_door" x="20.8125" y="4.625" />
		<object id="RB_old_ship.marker" x="20.8125" y="4.625" />
		<object id="RB_old_ship_notice" x="10" y="22" />
	</area>
	<action>
		function canHeatDamage(player) {
			if(player.vehicle != null) return player.vehicle != 'Spaceship' || player.vehicle.getXml().get('underground') != false;
			else {
				var resistItems = 0;
				for(s in player.equipment.slots) if(s.get() != null && s.get().info.xml.get('resistLava') == 'true') resistItems++;
				return resistItems &lt; 2;
			}
		}
	</action>

<procedure id="heat_damage">
  	<section if="Area.getXML(area.id).xml.get('allowHeatDamage') == 'true'">
    	<action>
      var playerObject = player.vehicle == null ? player : player.vehicle;
			if(area.isWater(playerObject.tile_x,playerObject.tile_y)) {
				playerObject.loseHealth(20,FLAG_IGNORE_DEFENSE|FLAG_HIDE_ATTACKER);
				playerObject.damageNotification(20,false,player);
			}
      if(canHeatDamage(player)) {
				playerObject.loseHealth(5,FLAG_IGNORE_DEFENSE|FLAG_HIDE_ATTACKER);
				playerObject.damageNotification(5,false,player);
      }
    	</action>
    <invokeLater seconds="0.25"><run procedure="heat_damage" /></invokeLater>
  </section>
</procedure>

	<area id="robot_start" width="256" height="96" background="stars.dwarf" planet="robot_rebellion" looping="true" water="RB_lava" water_anim="RB_lava" allowHeatDamage="true">
		<tiles id="sci1.grass.scorched" y="0" />
		<tiles id="scorched.dirt" start="0" end="0.5" />
		<tiles id="obsidian" start="0.5" end="1" />
		<tiles id="blackstone" y="95" />
		<ore id="coal" start="0.2" end="0.4" percent="0.0125" tile="scorched.dirt" />
		<ore id="quartz" start="0.4" end="0.5" percent="0.01" tile="scorched.dirt" />
		<ore id="lava" start="0.7" end="0.9" percent="1" tile="obsidian" />
		<ore id="uranium" start="0.9" end="1" percent="0.005" tile="obsidian" />
		<ore id="exotic_matter" start="0.9" end="1" percent="0.004" tile="obsidian" />
		<appendArea id="RB.crater" offsetX="120" offsetY="60" />
		<objects id="large_drone" startX="1" endX="255" startY="-3" endY="-3" minDist="60" maxDist="75" count="5" />
		<spawner id="large_drone" time="500" count="8" fromX="1" toX="255" fromY="-3" toY="-3" ground="false" />
		<objects id="small_tank" startX="1" endX="255" startY="-1" endY="-1" minDist="80" maxDist="85" count="5" />
		<spawner id="small_tank" time="500" count="6" fromX="1" toX="255" fromY="-1" toY="-1" />
		<init>
			<runAreaLoad/>
			<action>
				// Done by Etrotta
				function generateOreChunk(area,centerX,centerY,ore,radius,p){
					var i = area.addTileIndex(ore); //do not worry, if it already exists it returns instead of re-adding.
					for (x in -radius...radius+1){
						for (y in 0...radius-Math.abs(x)){
							if (Math.random() &lt; p) area.setTile(centerX + x, centerY + y, ORE_LAYER, i);
							if (Math.random() &lt; p) area.setTile(centerX + x, centerY - y, ORE_LAYER, i);
						}
					}
				}
				function generateWaterChunk(area,centerX,centerY,radius,p){
					for (x in -radius...radius+1){
						for (y in 0...radius-Math.abs(x)){
							if (Math.random() &lt; p){mine(centerX + x, centerY + y); area.setWater(centerX + x, centerY + y);}
							if (Math.random() &lt; p){mine(centerX + x, centerY - y); area.setWater(centerX + x, centerY - y);}
						}
					}
				}
			</action>
			<action>
				var i = 0;
				var chunksCount = 15;
				while (i &lt; chunksCount){
					var x = randInt(5,130);
					var y = randInt(10,90);
					var p = Utils.clamp(Math.random(),0.25,0.75);
					var radius = randInt(3,6);
					generateOreChunk(area,x,y,"moltanium_ore",radius,p);
					generateWaterChunk(area,x,y,radius+2,p+0.2);
					i++;
				}

				i = 0;
				while (i &lt; chunksCount){
					var x = randInt(160,250);
					var y = randInt(10,90);
					var p = Utils.clamp(Math.random(),0.25,0.75);
					var radius = randInt(3,6);
					generateOreChunk(area,x,y,"moltanium_ore",radius,p);
					generateWaterChunk(area,x,y,radius+2,p+0.2);
					i++;
				}
			</action>
		</init>
		<onLoad>
			<music id="robot_rebellion" seconds="1" />
			<section if="player.getKillCount('RB_boss') == 0 && player.hasQuest('RB_old_ship') && !getFlag('RB_ship_marked')">
				<dialogue section="player" id="RB_old_ship_detect_near" speaker='player' />
				<action>setFlag('RB_ship_marked',true);</action>
				<locate id="RB_old_ship.marker" />
			</section>
			<show tooltip="popup" text="warning.heat_damage" x="0.5" y="0.5" color="ff0000" />
			<run procedure="heat_damage" if="canHeatDamage(player)"/>
			<section if="player.isEquipped('water_pump')">
				<dialogue text='Nice try... You are not vacuuming up my precious lava. Lemme unequip that [item="water_pump"] for you.' />
				<action>player.equipment.unequip("back",player,true);</action>
			</section>
			<section if="area.getStructureById('RB_old_ship.crack2') == null && player.getKillCount('RB_boss') > 0">
					<object id="RB_old_ship.decoy" x="138.125" y="77.0625" />
					<light x="138.125" y="77.0625" size="10" />
					<pan toObject="area.getObject('RB_old_ship.decoy')" seconds="1" />
					<wait seconds="0.5" />
					<object id="RB.explosion" x="138.125" y="77.0625" />
					<structure id="RB_old_ship.crack2" x="138.125" y="77.0625">
						<teleport area="RB_old_ship.cave2" x="18" y="32" allowReturn="true" with="ellipse" />
					</structure>
					<sound id="explosion" />
					<action>for(x in 138...142) for(y in 74...78) mine(x,y);</action>
					<wait seconds="2">
						<operate object="area.getObject('RB.explosion')" />
					</wait>
			</section>
		</onLoad>
	</area>
	<area id="RB_old_ship_boss" width="32" height="16" external="robot_start">
		<tiles id="ship" start="0" end="1" />
		<action>for(y in 5...10) for(x in 8...24) mine(x, y,2);</action>
		<structure id="RB_old_ship_door.exit" x="20" y="9.1" />
		<light x="20" y="8" size="3" /><light x="21" y="8" size="3" /><light x="20" y="9" size="3" /><light x="21" y="9" size="3" />
		<structure id="sci1.light" x="10" y="6" />
		<structure id="sci1.light" x="14" y="6" />
		<structure id="sci1.light" x="18" y="6" />
		<structure id="sci1.light" x="22" y="6" />
		<structure id="RB_old_ship.bridge.entrance" x="8" y="9.1" />
		<object id="RB_boss" x="8" y="9" facing="right" />
		<init><runAreaLoad/></init>
		<onLoad>
			<section if="area.getObject('RB_boss') != null"><run procedure="RB_boss_start" /></section>
			<music id="RB_ship_interior" seconds="1" />
		</onLoad>
	</area>
	<area id="RB.bridge" x="-8" y="-8" width="32" height="25" allowHeatDamage="true">
		<tiles id="obsidian" start="0" end="1" />
		<mine start="0" end="1" /><tiles id="empty" start="0" end="1" />
		<action>
			for(x in 10...14) mine(x, 1); mine(13,2); for(y in 2...4) for(x in 7...13) mine(x, y);
			mine(6, 3); for(x in 6...11) mine(x, 4); for(x in 8...11) mine(x, 5); for(x in 8...10) mine(x, 6);
		</action>
		<structure id="science1.bridge" x="0" y="8" />
		<structure id="RB.bridge.exit" x="8" y="6" />
		<object id="RB.bridge.nav" x="5" y="4" />
		<object id="RB.bridge.nav.broken" x="6" y="2" />
		<object id="RB.bridge.nav.broken" x="11" y="4" />
		<object id="RB.bridge.nav.broken" x="14" y="1" />
		<light x="7" y="5" size="3" /><light x="7" y="6" size="3" />
		<init><runAreaLoad/></init>
		<onLoad>
			<music id="RB_ship_interior" seconds="1" />
			<show tooltip="popup" text="warning.heat_damage" x="0.5" y="0.5" color="ff0000" />
			<run procedure="heat_damage" if="canHeatDamage(player)"/>
		</onLoad>
	</area>
	<procedure id="RB_old_ship_opening">
		<section>
			<object id="RB_old_ship.decoy" x="138.125" y="77.0625" />
			<light x="138.125" y="77.0625" size="10" />
			<pan toObject="area.getObject('RB_old_ship.decoy')" seconds="1" />
			<wait seconds="0.5" />
			<action>for(x in 138...143) for(y in 73...78) mine(x,y);</action>
			<object id="RB.explosion" x="138.125" y="77.0625" />
			<structure id="RB_old_ship.crack2" x="138.125" y="77.0625" />
			<sound id="explosion" />
			<wait seconds="2">
				<operate object="area.getObject('RB.explosion')" />
			</wait>
		</section>
	</procedure>

	<procedure id="RB_ship_robots_lava">
		<object id="RB.explosion" x="27" y="11" />
		<action>for(x in 30...33){mine(x,9); area.setWater(x,9);}</action>
		<sound id="explosion" />
		<object id="RB.explosion" x="47" y="11" />
		<action>for(x in 50...53){mine(x,9); area.setWater(x,9);}</action>
		<sound id="explosion" />
		<action>for(y in 14...18) evalXml('&lt;object id="flame_wall" x="13" y="'+y+'" />'); player.setKillCount('moltanium_RB_boss_abyssalFight',0);</action>
		<object id="moltanium_RB_boss_abyssalFight" x="20" y="15" />
		<object id="moltanium_RB_boss_abyssalFight" x="40" y="15" />
		<structure id="RB_old_ship_crack1" x="148.8125" y="74.375" area="robot_start" />
		<structure id="RB_old_ship.crack1.ret" x="9" y="15">
			<teleport area="robot_start" x="148.8125" y="74.375" with="ellipse" />
		</structure>
		<remove structure="player.areas.get('RB_old_ship.cave2').getStructureById('RB_robots_door')" />
		<run procedure="RB_ship_robots_moarLava" />
	</procedure>

	<procedure id="RB_ship_robots_moarLava">
		<section if="area.id == 'RB_ship_robots'">
			<action>for(x in 30...33) area.setWater(x,9);</action>
			<action>for(x in 50...53) area.setWater(x,9);</action>
			<invokeLater seconds="1">
				<run procedure="RB_ship_robots_moarLava" />
			</invokeLater>
		</section>
	</procedure>

	<area id="RB_ship_robots" width="64" height="32" external="robot_start" planet="robot_rebellion" water="RB_lava" water_anim="RB_lava" allowHeatDamage="true">
		<tiles id="ship" start="0" end="1" />
		<action>for(y in 10...24) for(x in 10...56) mine(x, y);</action>
		<action>for(y in 10...24){setTile(12,y,"ship"); setTile(13,y,"ship");} for(y in 14...18){mine(12,y); mine(13,y);}</action>
		<structure id="RB_robots_door" x="10" y="15">
			<teleport area="RB_old_ship.cave2" x="65" y="15" with="ellipse" />
		</structure>
		<object id="abyssal_one_hotspot" x="12" y="22" />
		<object id="abyssal_one_starter" x="1" y="-1" />
		<structure id="moltanium_forge" x="46" y="23" />
		<light x="0" y="32" size="64" />
		<init><runAreaLoad /></init>
		<onLoad>
			<music id="RB_ship_interior" seconds="1" />
			<section if="area.getObject('abyssal_one_starter') != null">
				<lerp object="area.getObject('abyssal_one_starter')" alpha="0" seconds="0.25" />
				<facing object="area.getObject('abyssal_one_starter')" dir="right" />
			</section>
			<section if="player.isEquipped('water_pump')">
				<dialogue text='Nice try... You are not vacuuming up my precious lava. Lemme unequip that [item="water_pump"] for you.' />
				<action>player.equipment.unequip("back",player,true);</action>
			</section>
			<show tooltip="popup" text="warning.heat_damage" x="0.5" y="0.5" color="ff0000" />
			<run procedure="heat_damage" if="canHeatDamage(player)"/>
		</onLoad>
	</area>

	<area id="RB_old_ship.cave2" height="1" water="RB_lava" water_anim="RB_lava" allowHeatDamage="true">
		<tiles from="ship_interior.png" x="0" y="-1">
			<!--Main walls and floors--><tile id="ship" color="000000" /><tile id="ship" color="655e5e" layer="back" />
			<!--Room Doors--><tile id="ship" color="A50808" layer="back">area.addObject(ObjectInfo.make("RB_room_door", x*Tile.SIZE, y*Tile.SIZE))</tile>
			<!--Robot Factory Doors--><tile id="ship" color="7400ff" layer="back">area.addObject(ObjectInfo.make("RB_ship_robot_permission", x*Tile.SIZE, y*Tile.SIZE))</tile>
			<!--Entrance--><tile id="ship" color="c02de3" layer="back">getStructure("RB_old_ship.crack2.ret").build(null, area, x*Tile.SIZE, y*Tile.SIZE);</tile>
			<!--Power Cores--><tile id="ship" color="f2b95e" layer="back">area.addObject(ObjectInfo.make("RB_power_cores.broken", x*Tile.SIZE, y*Tile.SIZE))</tile>
			<!--Robot Factory Entrance--><tile id="ship" color="2444bd" layer="back">getStructure("RB_robots_door").build(null, area, x*Tile.SIZE, y*Tile.SIZE);</tile>
			<!--Screwdriver--><tile id="ship" color="35006b" layer="back">area.addObject(ObjectInfo.make("RB_screwdriver", x*Tile.SIZE, y*Tile.SIZE))</tile>
			<!--Vents--><tile id="ship" color="8e16f4" layer="back">getStructure("RB_vent").build(null, area, x*Tile.SIZE, y*Tile.SIZE);</tile>
		</tiles>
		<light x="18" y="32" size="4" />
		<action>
			var v = area.getStructureInTile(35, 35);
			v.area_id = "RB_vents"; v.x = 24*Tile.SIZE; v.y = 24*Tile.SIZE;
		</action>
		<action>
			// Room Content Shuffle
			// Format is {{structure_id, offsetX, structure?}, {structure_id, offsetX, offsetY}, etc.}
			var bigRooms = [
				{id : "bunker_factory", offsetX : 2, structure : true}, 
				{id : "lockdown_trap", offsetX : 0, structure : false}
			];
			var bigRoomCoords = [{x : 21, y : 25}, {x : 21, y : 20}];

			var smallRooms = [
				{id : "bunker_depot", offsetX : 1, structure : true}, 
				{id : "bunker", offsetX : 1, structure : true}, 
				{id : "lava_trap", offsetX : 0, structure : false}, 
				{id : "holo_projector", offsetX : 1.5, structure : true},
				{id : "robot_log1", offsetX : 2, structure : true},
				{id : "robot_log2", offsetX : 2, structure : true},
				{id : "molten_cyborg", offsetX : 2, structure : false}
				// {id : "", offsetX : 0, structure : false}
			];
			var smallRoomCoords = [
				{x : 10, y : 30}, {x : 10, y : 25}, 
				{x : 10, y : 20}, {x : 10, y : 15}, 
				{x : 37, y : 30}, {x : 37, y : 25}, 
				{x : 37, y : 20}, {x : 37, y : 15}
			];

			// Big Room Shuffling
			for(i in bigRoomCoords){
				shuffle(bigRooms);

				var room = bigRooms.pop(0);

				if(room != null){
					if(room.structure == true){
							getStructure(room.id).build(null, area, (i.x+room.offsetX)*Tile.SIZE, i.y*Tile.SIZE);
					} else{
							area.addObject(ObjectInfo.make(room.id, (i.x+room.offsetX)*Tile.SIZE, i.y*Tile.SIZE));
					}
				}
					
				
			}
			// Small Room Shuffling
			for(i in smallRoomCoords){
				shuffle(smallRooms);

				var room = smallRooms.pop(0);
				
				if(room != null){
					if(room.structure == true){
							getStructure(room.id).build(null, area, (i.x+room.offsetX)*Tile.SIZE, i.y*Tile.SIZE);
					} else{
							area.addObject(ObjectInfo.make(room.id, (i.x+room.offsetX)*Tile.SIZE, i.y*Tile.SIZE));
					}
				}
			}

		</action>
		<spawner id="whip_bot" time="3000" count="8" fromX="10" toX="41" fromY="11" toY="31" />
		<object id="holo_projector_dummy" x="0" y="0" />
		<init>
			<runAreaLoad/>
			<action>area.spawner.spawnAll('whip_bot');</action>
		</init>
		<onLoad>
			<section if="area.getObject('lava_target') != null">
				<run procedure="lava_target" />
			</section>
			<music id="RB_ship_interior" seconds="1" />
		</onLoad>
	</area>
	<area id="RB_vents">
		<teleport area="RB_old_ship.cave2" x="18" y="32" />
        <action>setBack(24, 24, "ship");</action>
		<structure id="RB_vent_power" x="24" y="24"><teleport area="RB_old_ship.cave2" x="35" y="35" /></structure>
		<set id="exits" value="[]" /><set id="structures" value="[]" /><set id="i" value="0" />
		<action>
			for(o in getLocalPlayer().areas.get('RB_old_ship.cave2').getStructuresById('RB_vent')){
				if(o.tile_x == 35 && o.tile_y == 35) continue;
				else{
					exits.push({area:"RB_old_ship.cave2", x:o.tile_x, y:o.tile_y});
				}	
			}
		</action>
		<place x="1" y="1" width="47" height="47" count="exits.length" pad="5" accept="Math.abs(x-24) > 5 || Math.abs(y-24) > 5">
			setBack(x, y, "ship"); var s = buildStructure("RB_vent", x, y);
			var mainRoomVent = getLocalPlayer().areas.get('RB_old_ship.cave2').getStructureInTile(exits[i].x, exits[i].y);
			mainRoomVent.area_id = "RB_vents"; mainRoomVent.x = x*Tile.SIZE; mainRoomVent.y = y*Tile.SIZE;
			var exit = exits[i++]; s.area_id = exit.area; s.x = exit.x*Tile.SIZE; s.y = exit.y*Tile.SIZE;
		</place>
		<spawner id="RB_smallBoss" time="3000" count="12" fromX="1" toX="48" fromY="1" toY="48" />
		<maze floor="ship" wall="ship" width="48" height="48" /><light x="24" y="24" size="3" />
		<init><runAreaLoad /><action>area.spawner.spawnAll('RB_smallBoss');</action></init>
	</area>
	<procedure id="unlock_RB_doors">
		<action>
			for(o in area.getObjectsById("RB_room_door")){
				setTile(o.tile_x, o.tile_y, null);
				area.addObject(ObjectInfo.make("ship.doorh", o.tile_x*Tile.SIZE, o.tile_y*Tile.SIZE));
				area.removeObject(o);
			}
    	</action>
	</procedure>

	<procedure id="gimme_stuff">
		<item id="titanium" count="15" />
		<item id="ship_parts" count="2" />
		<item id="exotic_matter" count="5" />
	</procedure>

	
	<planet id="robot_rebellion" height="42">
		<orbit id="robot_rebellion.orbit" width="406" height="64" background="stars.dwarf.orbit" name="system.planet.robot">
			<area id="robot_start" x="0" />
			<spawner id="RB_enemy_ship" time="500" count="5" fromX="2" toX="402" fromY="10" toY="54" ground="false" />
			<init><runAreaLoad /><action>area.spawner.spawnAll("RB_enemy_ship")</action></init>
			<onLoad>
				<music id="orbit" seconds="1" /><radar tile="orbit.radar" animation="orbit.radar" padding="2" />
				<section if="player.hasItem('com_device') && !player.hasQuest('RB_old_ship')">
					<dialogue section="player" id="RB_old_ship_detect" speaker='player' />
					<quest id="RB_old_ship" ask="false" />
				</section>
				<section if="!player.hasSeenItem('draemordion_helm')">
					<dialogue text="Because this equipment that is needed to enter this planet isn't available any other way in this update, have the armor now." />
					<item id="draemordion_helm" count="1" />
					<item id="draemordion_armor" count="1" />
				</section>
				<show tooltip="popup" text="warning.heat_damage" x="0.5" y="0.5" color="ff0000"/>
				<run procedure="heat_damage" if="canHeatDamage(player)"/>
			</onLoad>
		</orbit>
	</planet>
</areas>
